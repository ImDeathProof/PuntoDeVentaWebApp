@model PuntoDeVentaWeb.Models.SalesViewModel
@{
    ViewData["Title"] = "Create Sale";
}
<h1>@ViewData["Title"]</h1>
@{
    if (TempData["ErrorMessage"] != null) {
        <div class="alert alert-danger" role="alert">
            <p>@TempData["ErrorMessage"]</p>
        </div>
    }else if (TempData["SuccessMessage"] != null) {
        <div class="alert alert-success" role="alert">
            <p>@TempData["SuccessMessage"]</p>
        </div>
    }
}
<p>
    <a class="btn btn-primary" asp-action="Index"><i class="fa-solid fa-arrow-left"></i> Back to Sales List</a>
</p>
<div class="card">
    <form asp-action="Create" method="post">
        <div class="card-body">
            <div class="mb-3 form-group">
                <label asp-for="Sale.Date" cñass="form-label"></label>
                <input asp-for="Sale.Date" class="form-control" />
                <span asp-validation-for="Sale.Date" class="text-danger"></span>
            </div>
            <div class="mb-3 form-group">
                <label asp-for="Sale.ClientId" class="form-label">Client</label>
                <select asp-for="Sale.ClientId" class="form-select" asp-items="ViewBag.ClientId"></select>
                <span asp-validation-for="Sale.ClientId" class="text-danger"></span>
            </div>
            <div class="mb-3 form-group">
                <label asp-for="Sale.UserId" classs="form-label">Seller</label>
                <select asp-for="Sale.UserId" class="form-select" asp-items="ViewBag.SellerId"></select>
                <span asp-validation-for="Sale.UserId" class="text-danger"></span>
            </div>
            <div class="mb-3 form-group">
                <label asp-for="Sale.PaymentMethodId" class="form-label">Payment Method</label>
                <select asp-for="Sale.PaymentMethodId" class="form-select" asp-items="ViewBag.PaymentMethodId"></select>
                <span asp-validation-for="Sale.PaymentMethodId" class="text-danger"></span>
            </div>
            <div class="mb-3 border p-3 rounded table-responsive">
                <span asp-validation-for="SaleDetails" class="text-danger" class="alert alert-danger"></span>
                <table class="table" id="detailsTable">
                    <thead>
                        <tr>
                            <th>N°</th>
                            <th>Product</th>
                            <th>Quantity</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.SaleDetails.Count; i++)
                        {
                            <tr>
                                <td>@i</td>
                                <td><select asp-for="SaleDetails[@i].ProductId" asp-items="ViewBag.ProductId" class="form-control"></select></td>
                                <td><input asp-for="SaleDetails[@i].Quantity" class="form-control quantity-input"/></td>
                                <td><button type="button" class="btn btn-danger" onclick="removeDetail(this)">Remove</button></td>
                            </tr>
                        }
                    </tbody>
                </table>
                <div class="mb-3">
                    <button type="button" class="btn btn-success" onclick="addDetail()"><i class="fa-solid fa-plus"></i></button>
                </div>
            </div>
            <div class="card-footer">
                <button type="submit" class="btn btn-primary">Create Sale</button>
            </div>
        </div>
    </form>
</div>

<script>
    // Agregar nueva fila
    function addDetail() {
        const table = document.getElementById("detailsTable").getElementsByTagName('tbody')[0];
        const newRow = table.insertRow();
        const index = table.rows.length - 1;
        newRow.innerHTML = `
                <td>${index}</td>
                <td>
                    <select name="SaleDetails[${index}].ProductId" 
                            class="form-control product-select"
                            >
                        @if (ViewBag.ProductId != null)
                        {
                            foreach (var product in ViewBag.ProductId as SelectList)
                            {
                                <option value="@product.Value">@product.Text</option>
                            }
                        }
                    </select>
                </td>
                <td><input name="SaleDetails[${index}].Quantity" class="form-control" /></td>
                <td><button type="button" class="btn btn-danger" onclick="removeDetail(this)">Remove</button></td>
            `;
    }

    // remove rows
    function removeDetail(button) {
        const row = button.closest('tr');
        if(row.rowIndex === 1){
            return;
        }
        row.remove();
    }
    function loadProduct(selectElement) {
        // get the selected option
        var selectedOption = selectElement.options[selectElement.selectedIndex];
        console.log(selectedOption.outerHTML);
        // get the id and price
        var productId = selectedOption.getAttribute("data-id");
        var productPrice = selectedOption.getAttribute("data-price");

        // Obtener los inputs correspondientes al prodCount actual
        var prodCount = selectElement.name.match(/\d+/)[0]; // Extraer el número de prodCount

        var idField = document.getElementById("prod-id" + prodCount);
        var priceField = document.getElementById("prod-price" + prodCount);

        // Asignar valores a los campos
        if (idField && priceField) {
            idField.value = productId;
            priceField.value = productPrice;
        }
    }
</script>