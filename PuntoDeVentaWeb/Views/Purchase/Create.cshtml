@model PuntoDeVentaWeb.Models.PurchaseViewModel

@{
    ViewData["Title"] = "Create Purchase";
}

<form asp-action="Create" method="post">
    <!-- Datos de la compra -->
        <div class="form-group">
            <label asp-for="Purchase.Date" class="control-label"></label>
            <input asp-for="Purchase.Date" class="form-control" />

            <label asp-for="Purchase.User" class="control-label"></label>
            <select asp-for="Purchase.UserId" class="form-control" asp-items="ViewBag.UserId"></select>
            
            <label asp-for="Purchase.Supplier" class="control-label"></label>
            <select asp-for="Purchase.SupplierId" class="form-control" asp-items="ViewBag.SupplierId"></select>

            <label asp-for="Purchase.PaymentMethod" class="control-label"></label>
            <select asp-for="Purchase.PaymentMethodId" class="form-control" asp-items="ViewBag.PaymentMethodsId"></select>
        </div>
    
    <!-- Tabla de detalles (PurchaseDetails) -->
    <table class="table" id="detailsTable">
        <thead>
            <tr>
                <th>N°</th>
                <th>Product</th>
                <th>Quantity</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.PurchaseDetails.Count; i++)
            {
                <tr>
                    <td>@i</td>
                    <td><select asp-for="PurchaseDetails[@i].ProductId" asp-items="ViewBag.ProductId" class="form-control"></select></td>
                    <td><input asp-for="PurchaseDetails[@i].Quantity" class="form-control quantity-input"/></td>
                    <td><button type="button" class="btn btn-danger" onclick="removeDetail(this)">Eliminar</button></td>
                </tr>
            }
        </tbody>
    </table>


    <button type="button" class="btn btn-success" onclick="addDetail()">+ Agregar Detalle</button>
    <button type="submit" class="btn btn-primary">Guardar Compra</button>
</form>


<script>
    // Agregar nueva fila
    function addDetail() {
        const table = document.getElementById("detailsTable").getElementsByTagName('tbody')[0];
        const newRow = table.insertRow();
        const index = table.rows.length - 1;
        newRow.innerHTML = `
                <td>${index}</td>
                <td>
                    <select name="PurchaseDetails[${index}].ProductId" 
                            class="form-control product-select"
                            >
                        @if (ViewBag.ProductId != null)
                        {
                            foreach (var product in ViewBag.ProductId as SelectList)
                            {
                                <option value="@product.Value">@product.Text</option>
                            }
                        }
                    </select>
                </td>
                <td><input name="PurchaseDetails[${index}].Quantity" class="form-control" /></td>
                <td><button type="button" class="btn btn-danger" onclick="removeDetail(this)">Eliminar</button></td>
            `;
    }

    // Eliminar fila
    function removeDetail(button) {
        const row = button.closest('tr');
        row.remove();
    }
    function loadProduct(selectElement) {
        // Obtener la opción seleccionada
        var selectedOption = selectElement.options[selectElement.selectedIndex];
        console.log(selectedOption.outerHTML);
        // Obtener el ID y el precio desde los atributos data
        var productId = selectedOption.getAttribute("data-id");
        var productPrice = selectedOption.getAttribute("data-price");

        // Obtener los inputs correspondientes al prodCount actual
        var prodCount = selectElement.name.match(/\d+/)[0]; // Extraer el número de prodCount

        var idField = document.getElementById("prod-id" + prodCount);
        var priceField = document.getElementById("prod-price" + prodCount);

        // Asignar valores a los campos
        if (idField && priceField) {
            idField.value = productId;
            priceField.value = productPrice;
        }
    }
</script>